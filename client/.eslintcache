[{"/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/App.tsx":"1","/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Store/reducers/auth.reducer.ts":"2","/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Pages/Student/StudentDetails/index.tsx":"3","/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Store/actions/adminActions.action.ts":"4","/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Components/Table/index.tsx":"5","/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Components/Notify/index.tsx":"6","/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Components/Header/index.tsx":"7","/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Pages/Courses/index.tsx":"8","/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Pages/Student/AllStudents/index.tsx":"9","/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Store/reducers/student.reducer.ts":"10","/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Store/reducers/course.reducer.ts":"11"},{"size":355,"mtime":1610779584614,"results":"12","hashOfConfig":"13"},{"size":1300,"mtime":1610802261866,"results":"14","hashOfConfig":"13"},{"size":5634,"mtime":1611154515544,"results":"15","hashOfConfig":"13"},{"size":2423,"mtime":1610940144963,"results":"16","hashOfConfig":"13"},{"size":8682,"mtime":1611153392034,"results":"17","hashOfConfig":"13"},{"size":1629,"mtime":1611148530765,"results":"18","hashOfConfig":"13"},{"size":7276,"mtime":1611152171607,"results":"19","hashOfConfig":"13"},{"size":1700,"mtime":1611154870037,"results":"20","hashOfConfig":"13"},{"size":1670,"mtime":1611154842614,"results":"21","hashOfConfig":"13"},{"size":1628,"mtime":1611155082501,"results":"22","hashOfConfig":"13"},{"size":1123,"mtime":1611155097866,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"qbhn38",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/App.tsx",[],["48","49"],"/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Store/reducers/auth.reducer.ts",[],"/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Pages/Student/StudentDetails/index.tsx",["50"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useMappedState } from \"redux-react-hook\";\nimport { getOneStudent } from \"Store/actions/student.action\";\nimport { getCourses } from \"Store/actions/course.action\";\nimport { enrollStudent } from \"Store/actions/adminActions.action\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Header from \"Components/Header\";\nimport Table from \"Components/Table\";\nimport Footer from \"Components/Footer\";\nimport styles from \"./style.module.scss\";\n\nconst tableHeader: Array<string> = [\"Course Name\", \"\"];\n\ninterface getOneState {\n  studentId: string;\n  courseId: string;\n  courseName: string;\n}\n\n// interface enrollCourseState {\n//   courseName: string;\n// }\n\ninterface Props {\n  match: any;\n}\n\nexport default function OneStudent({ match }: Props) {\n  const dispatch = useDispatch();\n  const {student, enrolled_courses, loading} = useMappedState(\n    ({ oneStudentReducer }: any) => oneStudentReducer);\n  // const loading = student.loading;\n  const { courses } = useMappedState(\n    ({ courseReducer }: any) => courseReducer\n  );\n  const enroll = useMappedState(\n    ({ adminActionsReducer }: any) => adminActionsReducer\n  );\n  const [state, setState] = useState<getOneState>({\n    studentId: \"\",\n    courseId: \"\",\n    courseName: \"\",\n  });\n  // const [coursePicked, setCoursePicked] = useState<enrollCourseState>({\n  //   courseName: \"\",\n  // });\n  const [enrollForCourseModal, setEnrollModal] = useState(false);\n\n  const handleEnrollModal = () => {\n    setEnrollModal(true);\n  }\n\n  const handleCloseEnroll = () => {\n    setState({\n      ...state,\n      courseId: \"\",\n    })\n    setEnrollModal(false);\n  };\n\n  const setValue = (e: any) =>\n  setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n\n  // const pickHandler = (cosId: string) => {\n  //   setState({\n  //     ...state,\n  //     courseId: cosId,\n  //   })\n  // }\n\n  useEffect(() => {\n    const id = match.params.id;\n    setState({\n      ...state,\n      studentId: id,\n    });\n    dispatch(getOneStudent({ id }));\n    dispatch(getCourses());\n  }, [dispatch]);\n\n  const enrollCourseAction = (e: any) => {\n    e && e.preventDefault();\n    dispatch(\n      enrollStudent({ ...state }, () => {\n        dispatch(getOneStudent({ id: state.studentId }));\n        handleCloseEnroll();\n      })\n    );\n  };\n\n  return (\n    <>\n      <div className={styles.detail}>\n        <Header goTo=\"Students\" goToLink=\"/students\" />\n        <div className={styles.content}>\n          {loading && (\n            <div className={styles.wraploader}>\n              <Spinner className={styles.loader} animation=\"grow\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </div>\n          )}\n            <>\n              {(student.email || !loading) && (\n                <div className={styles.top}>\n                  <div className={styles.student}>\n                    <h1>{`${student.firstname} ${student.lastname}`}</h1>\n                    <p>{student.email}</p>\n                  </div>\n                  <div className={styles.info}>\n                    <p className={styles.numb}>\n                      {enrolled_courses?.length}\n                    </p>\n                    <p className={styles.text}>\n                      {enrolled_courses?.length > 1\n                        ? \"ENROLLED COURSES\"\n                        : \"ENROLLED COURSE\"}\n                    </p>\n                  </div>\n                </div>\n              )}\n              <div className={styles.course}>\n                <div className={styles.head}>\n                  <p className={styles.act}>ACTIVE COURSES</p>\n                  <p className={styles.buton} onClick={handleEnrollModal}>\n                    Enroll Course\n                  </p>\n                </div>\n                {student && enrolled_courses && (\n                  <Table\n                    trigger=\"oneStudent\"\n                    header={tableHeader}\n                    tableData={enrolled_courses}\n                    parameter={state.studentId}\n                  />\n                )}\n              </div>\n            </>\n        </div>\n        <Footer />\n      </div>\n\n      <Modal\n        show={enrollForCourseModal}\n        onHide={handleCloseEnroll}\n        backdrop=\"static\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Course For Student</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  as=\"select\"\n                  size=\"lg\"\n                  custom\n                  name=\"courseId\"\n                  value={state.courseId}\n                  onChange={setValue}\n                >\n                  <option>select...</option>\n                  {courses?.map((options: any, i: any) => (\n                    <option value={options.course_id}>{options.course_name}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Form>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"grey\" onClick={handleCloseEnroll}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={enrollCourseAction}\n          disabled={(state.courseId === \"\" || enroll.loading) && true}>\n            {enroll.loading ? \"Enrolling...\" : \"Enroll\"}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Store/actions/adminActions.action.ts",[],"/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Components/Table/index.tsx",[],"/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Components/Notify/index.tsx",[],"/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Components/Header/index.tsx",[],"/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Pages/Courses/index.tsx",[],"/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Pages/Student/AllStudents/index.tsx",[],"/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Store/reducers/student.reducer.ts",[],"/Users/ayodejimoronkeji/Desktop/Projects/cospik/client/src/Store/reducers/course.reducer.ts",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":85,"column":6,"nodeType":"57","endLine":85,"endColumn":16,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.params.id' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [dispatch, match.params.id, state]",{"range":"64","text":"65"},[2217,2227],"[dispatch, match.params.id, state]"]